// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calendar.proto

package calendar_data

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MonthName int32

const (
	MonthName_January   MonthName = 0
	MonthName_February  MonthName = 1
	MonthName_March     MonthName = 2
	MonthName_April     MonthName = 3
	MonthName_May       MonthName = 4
	MonthName_June      MonthName = 5
	MonthName_July      MonthName = 6
	MonthName_August    MonthName = 7
	MonthName_September MonthName = 8
	MonthName_October   MonthName = 9
	MonthName_November  MonthName = 10
	MonthName_December  MonthName = 11
)

var MonthName_name = map[int32]string{
	0:  "January",
	1:  "February",
	2:  "March",
	3:  "April",
	4:  "May",
	5:  "June",
	6:  "July",
	7:  "August",
	8:  "September",
	9:  "October",
	10: "November",
	11: "December",
}

var MonthName_value = map[string]int32{
	"January":   0,
	"February":  1,
	"March":     2,
	"April":     3,
	"May":       4,
	"June":      5,
	"July":      6,
	"August":    7,
	"September": 8,
	"October":   9,
	"November":  10,
	"December":  11,
}

func (x MonthName) String() string {
	return proto.EnumName(MonthName_name, int32(x))
}

func (MonthName) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{0}
}

type DayName int32

const (
	DayName_Monday    DayName = 0
	DayName_Tuesday   DayName = 1
	DayName_Wednesday DayName = 2
	DayName_Thursday  DayName = 3
	DayName_Friday    DayName = 4
	DayName_Saturday  DayName = 5
	DayName_Sunday    DayName = 6
)

var DayName_name = map[int32]string{
	0: "Monday",
	1: "Tuesday",
	2: "Wednesday",
	3: "Thursday",
	4: "Friday",
	5: "Saturday",
	6: "Sunday",
}

var DayName_value = map[string]int32{
	"Monday":    0,
	"Tuesday":   1,
	"Wednesday": 2,
	"Thursday":  3,
	"Friday":    4,
	"Saturday":  5,
	"Sunday":    6,
}

func (x DayName) String() string {
	return proto.EnumName(DayName_name, int32(x))
}

func (DayName) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{1}
}

type Calendar struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Years                []*Year  `protobuf:"bytes,2,rep,name=Years,proto3" json:"Years,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Calendar) Reset()         { *m = Calendar{} }
func (m *Calendar) String() string { return proto.CompactTextString(m) }
func (*Calendar) ProtoMessage()    {}
func (*Calendar) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{0}
}

func (m *Calendar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Calendar.Unmarshal(m, b)
}
func (m *Calendar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Calendar.Marshal(b, m, deterministic)
}
func (m *Calendar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Calendar.Merge(m, src)
}
func (m *Calendar) XXX_Size() int {
	return xxx_messageInfo_Calendar.Size(m)
}
func (m *Calendar) XXX_DiscardUnknown() {
	xxx_messageInfo_Calendar.DiscardUnknown(m)
}

var xxx_messageInfo_Calendar proto.InternalMessageInfo

func (m *Calendar) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Calendar) GetYears() []*Year {
	if m != nil {
		return m.Years
	}
	return nil
}

type Year struct {
	Number               uint32   `protobuf:"varint,1,opt,name=Number,proto3" json:"Number,omitempty"`
	Months               []*Month `protobuf:"bytes,2,rep,name=Months,proto3" json:"Months,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Year) Reset()         { *m = Year{} }
func (m *Year) String() string { return proto.CompactTextString(m) }
func (*Year) ProtoMessage()    {}
func (*Year) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{1}
}

func (m *Year) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Year.Unmarshal(m, b)
}
func (m *Year) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Year.Marshal(b, m, deterministic)
}
func (m *Year) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Year.Merge(m, src)
}
func (m *Year) XXX_Size() int {
	return xxx_messageInfo_Year.Size(m)
}
func (m *Year) XXX_DiscardUnknown() {
	xxx_messageInfo_Year.DiscardUnknown(m)
}

var xxx_messageInfo_Year proto.InternalMessageInfo

func (m *Year) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Year) GetMonths() []*Month {
	if m != nil {
		return m.Months
	}
	return nil
}

type Month struct {
	Name                 MonthName `protobuf:"varint,1,opt,name=Name,proto3,enum=calendar_data.MonthName" json:"Name,omitempty"`
	Weeks                []*Week   `protobuf:"bytes,2,rep,name=weeks,proto3" json:"weeks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Month) Reset()         { *m = Month{} }
func (m *Month) String() string { return proto.CompactTextString(m) }
func (*Month) ProtoMessage()    {}
func (*Month) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{2}
}

func (m *Month) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Month.Unmarshal(m, b)
}
func (m *Month) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Month.Marshal(b, m, deterministic)
}
func (m *Month) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Month.Merge(m, src)
}
func (m *Month) XXX_Size() int {
	return xxx_messageInfo_Month.Size(m)
}
func (m *Month) XXX_DiscardUnknown() {
	xxx_messageInfo_Month.DiscardUnknown(m)
}

var xxx_messageInfo_Month proto.InternalMessageInfo

func (m *Month) GetName() MonthName {
	if m != nil {
		return m.Name
	}
	return MonthName_January
}

func (m *Month) GetWeeks() []*Week {
	if m != nil {
		return m.Weeks
	}
	return nil
}

type Week struct {
	FirstDay             uint32   `protobuf:"varint,1,opt,name=FirstDay,proto3" json:"FirstDay,omitempty"`
	Days                 []*Day   `protobuf:"bytes,2,rep,name=Days,proto3" json:"Days,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Week) Reset()         { *m = Week{} }
func (m *Week) String() string { return proto.CompactTextString(m) }
func (*Week) ProtoMessage()    {}
func (*Week) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{3}
}

func (m *Week) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Week.Unmarshal(m, b)
}
func (m *Week) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Week.Marshal(b, m, deterministic)
}
func (m *Week) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Week.Merge(m, src)
}
func (m *Week) XXX_Size() int {
	return xxx_messageInfo_Week.Size(m)
}
func (m *Week) XXX_DiscardUnknown() {
	xxx_messageInfo_Week.DiscardUnknown(m)
}

var xxx_messageInfo_Week proto.InternalMessageInfo

func (m *Week) GetFirstDay() uint32 {
	if m != nil {
		return m.FirstDay
	}
	return 0
}

func (m *Week) GetDays() []*Day {
	if m != nil {
		return m.Days
	}
	return nil
}

type Day struct {
	Number               int32    `protobuf:"varint,1,opt,name=Number,proto3" json:"Number,omitempty"`
	Name                 DayName  `protobuf:"varint,2,opt,name=Name,proto3,enum=calendar_data.DayName" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Day) Reset()         { *m = Day{} }
func (m *Day) String() string { return proto.CompactTextString(m) }
func (*Day) ProtoMessage()    {}
func (*Day) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{4}
}

func (m *Day) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Day.Unmarshal(m, b)
}
func (m *Day) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Day.Marshal(b, m, deterministic)
}
func (m *Day) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Day.Merge(m, src)
}
func (m *Day) XXX_Size() int {
	return xxx_messageInfo_Day.Size(m)
}
func (m *Day) XXX_DiscardUnknown() {
	xxx_messageInfo_Day.DiscardUnknown(m)
}

var xxx_messageInfo_Day proto.InternalMessageInfo

func (m *Day) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Day) GetName() DayName {
	if m != nil {
		return m.Name
	}
	return DayName_Monday
}

func init() {
	proto.RegisterEnum("calendar_data.MonthName", MonthName_name, MonthName_value)
	proto.RegisterEnum("calendar_data.DayName", DayName_name, DayName_value)
	proto.RegisterType((*Calendar)(nil), "calendar_data.Calendar")
	proto.RegisterType((*Year)(nil), "calendar_data.Year")
	proto.RegisterType((*Month)(nil), "calendar_data.Month")
	proto.RegisterType((*Week)(nil), "calendar_data.Week")
	proto.RegisterType((*Day)(nil), "calendar_data.Day")
}

func init() { proto.RegisterFile("calendar.proto", fileDescriptor_e3d25d49f056cdb2) }

var fileDescriptor_e3d25d49f056cdb2 = []byte{
	// 404 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4f, 0x6b, 0xdb, 0x40,
	0x10, 0xc5, 0xab, 0xff, 0xd2, 0x38, 0x36, 0xcb, 0xb4, 0x04, 0xd3, 0x53, 0xd0, 0xa1, 0xa4, 0x26,
	0xf8, 0x90, 0x7e, 0x82, 0x50, 0xd7, 0x60, 0x53, 0xb9, 0x20, 0x07, 0x42, 0x4f, 0xed, 0x5a, 0x1a,
	0x6a, 0x13, 0x47, 0x32, 0xab, 0xdd, 0x16, 0x7d, 0x98, 0x7e, 0xd7, 0x32, 0x2b, 0xd9, 0x25, 0x6e,
	0x73, 0x9b, 0x9f, 0xde, 0xcc, 0xdb, 0xf7, 0x40, 0x30, 0x2a, 0xe4, 0x9e, 0xaa, 0x52, 0xaa, 0xe9,
	0x41, 0xd5, 0xba, 0xc6, 0xe1, 0x91, 0xbf, 0x95, 0x52, 0xcb, 0xf4, 0x13, 0xc4, 0x1f, 0xfb, 0x0f,
	0x38, 0x02, 0x77, 0x51, 0x8e, 0x9d, 0x2b, 0xe7, 0x3a, 0xc9, 0xdd, 0x45, 0x89, 0xef, 0x21, 0xf8,
	0x4a, 0x52, 0x35, 0x63, 0xf7, 0xca, 0xbb, 0x1e, 0xdc, 0xbe, 0x9e, 0x3e, 0x3b, 0x9d, 0xb2, 0x96,
	0x77, 0x1b, 0xe9, 0x67, 0xf0, 0x79, 0xc0, 0x4b, 0x08, 0x57, 0xe6, 0x69, 0x43, 0xca, 0xda, 0x0c,
	0xf3, 0x9e, 0xf0, 0x06, 0xc2, 0xac, 0xae, 0xf4, 0xf6, 0xe8, 0xf5, 0xe6, 0xcc, 0xcb, 0x8a, 0x79,
	0xbf, 0x93, 0x7e, 0x87, 0xc0, 0x4e, 0x78, 0x03, 0xfe, 0x4a, 0x3e, 0x91, 0x35, 0x1b, 0xdd, 0x8e,
	0xff, 0x77, 0xc4, 0x7a, 0x6e, 0xb7, 0x38, 0xef, 0x2f, 0xa2, 0xc7, 0x97, 0xf2, 0x3e, 0x10, 0x3d,
	0xe6, 0xdd, 0x46, 0xba, 0x04, 0x9f, 0x11, 0xdf, 0x42, 0x3c, 0xdf, 0xa9, 0x46, 0xcf, 0x64, 0xdb,
	0x27, 0x3e, 0x31, 0xbe, 0x03, 0x7f, 0x26, 0xdb, 0xa3, 0x1b, 0x9e, 0xb9, 0xcd, 0x64, 0x9b, 0x5b,
	0x3d, 0x5d, 0x80, 0xc7, 0xeb, 0xcf, 0xab, 0x07, 0xa7, 0xea, 0x93, 0xbe, 0x83, 0x6b, 0x3b, 0x5c,
	0xfe, 0x6b, 0xf3, 0xb7, 0xc1, 0xe4, 0xb7, 0x03, 0xc9, 0xa9, 0x15, 0x0e, 0x20, 0x5a, 0xca, 0xca,
	0x48, 0xd5, 0x8a, 0x57, 0x78, 0x01, 0xf1, 0x9c, 0x36, 0xca, 0x92, 0x83, 0x09, 0x04, 0x99, 0x54,
	0xc5, 0x56, 0xb8, 0x3c, 0xde, 0x1d, 0xd4, 0x6e, 0x2f, 0x3c, 0x8c, 0xc0, 0xcb, 0x64, 0x2b, 0x7c,
	0x8c, 0xc1, 0x5f, 0x9a, 0x8a, 0x44, 0xd0, 0x4d, 0xfb, 0x56, 0x84, 0x08, 0x10, 0xde, 0x99, 0x1f,
	0xa6, 0xd1, 0x22, 0xc2, 0x21, 0x24, 0x6b, 0x3a, 0x68, 0xe2, 0x80, 0x22, 0xe6, 0x87, 0xbe, 0x14,
	0xba, 0x66, 0x48, 0xf8, 0xa1, 0x55, 0xfd, 0xb3, 0x93, 0x80, 0x69, 0x46, 0x45, 0x47, 0x83, 0x09,
	0x41, 0xd4, 0x07, 0x66, 0xbb, 0xac, 0xae, 0x4a, 0xc9, 0xd9, 0x06, 0x10, 0xdd, 0x1b, 0x6a, 0x18,
	0x1c, 0xf6, 0x7e, 0xa0, 0xb2, 0xea, 0xd0, 0x65, 0x83, 0xfb, 0xad, 0x51, 0x96, 0x3c, 0xbe, 0x9a,
	0xab, 0x5d, 0x69, 0x43, 0x5e, 0x40, 0xbc, 0x96, 0xda, 0x28, 0xa6, 0x80, 0x95, 0xb5, 0xb1, 0x7e,
	0xe1, 0x26, 0xb4, 0xbf, 0xea, 0x87, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd1, 0xc4, 0x16, 0xbc,
	0xbc, 0x02, 0x00, 0x00,
}
